asyncapi: 2.2.0
tags:
  - name: External API
  - name: Emergency Support
info:
  title: Mobilaris MCE Emergency Support for Tags
  version: 1.0.0
  description: |
    External tag interface for receiving and acknowledging emergency messages from Mobilaris Emergency Support.

    ### Overview
    - Subscribe to emergency support messages.
    - Publish messages as **delivered** when processed by the device.
    - Publish messages as **acknowledged** after receving user input.

servers:
  RabbitMQ:
    url: mq.{site}:{mqtt_port}
    description: Mobilaris RabbitMQ Broker
    variables:
      site:
        description: Site URL
        examples:
          - goliat.in.emi.se
      mqtt_port:
        description: MQTT Port
        default: "1883"
    protocol: mqtt
    protocolVersion: 1.0.0
    bindings:
      mqtt:
        cleanSession: true
    security:
      - user_pass: []

channels:
  amq_topic/json-messages/{tagId}:
    parameters:
      tagId:
        description: Recipient MAC Address
        schema:
          type: string
          pattern: ^([A-F0-9]{2}:){5}[A-F0-9]{2}$
          examples:
            - aa:bb:cc:dd:ee:ff
    subscribe:
      summary: Receive emergency messages
      bindings:
        mqtt:
          qos: 1
          retain: false
      message:
        name: message
        title: Emergency Message
        contentType: application/json
        payload:
          type: object
          required:
            - id
            - to
            - contentType
            - priority
            - status
            - statusReady
            - errorCode
            - createdTime
            - statusChangeTime
          properties:
            id:
              type: integer
              format: int64
              description: Server generated ID, used in message reports.
              example: 1
            groupMessageId:
              type: integer
              format: int64
              description: Indicates if message is part of a group message with multiple recipients, -1 means not part of group message.
              default: -1
            from:
              type: object
              properties:
                type:
                  description: Type of id
                  type: string
                  enum:
                    - NO_TYPE
                    - USER
                    - MAC
                    - EMAIL
                    - PHONENUMBER
                  example: MAC
                id:
                  type: string
                  description: Representation of the specified ID type
                  example: "aa:bb:cc:11:22:33"
            to:
              type: object
              decsription: Sender of message
              properties:
                type:
                  description: Type of id
                  type: string
                  enum:
                    - NO_TYPE
                    - USER
                    - MAC
                    - EMAIL
                    - PHONENUMBER
                  example: MAC
                id:
                  type: string
                  description: Representation of the specified ID type
                  example: "aa:bb:cc:11:22:33"
            contentType:
              type: string
              description: The data content type. How to decode data. "text/plain" is the only one currently used, this text is encoded with UTF-8.
              enum: 
                - text/plain
              default: text/plain
            subject:
              type: string
              description: Subject of message
              example: Subject
            data:
              type: array
              items:
                type: integer
                format: byte
              description: Content of message
              example: [84,69,83,84,32,84,69,83,84,32,84,69,83,84]
            priority:
              type: string
              description: Priority of message, Messages from Mobilaris Emergency Support will have `EMERGENCY_PRIORITY`. Messages with other priorities are used by other applications and should be disregarded for an emergency support integration.
              enum: 
                - NO_PRIORITY
                - LOW_PRIORITY
                - MEDIUM_PRIORITY
                - HIGH_PRIORITY
                - EMERGENCY_PRIORITY
              example: EMERGENCY_PRIORITY
            status:
              $ref: '#/components/schemas/Status'
            statusReady:
              $ref: '#/components/schemas/StatusReady'
            errorCode:
              $ref: '#/components/schemas/ErrorCode'
            createdTime:
              type: integer
              description: Time of message creation, Unix timestamp
              format: int64
              example: 1622706641452
            statusChangedTime:
              type: integer
              description: Time of latest status update to message, Unix timestamp
              format: int64
              example: 1622706641470
  
  amq_topic/json-reports:
    publish:
      summary: Receive emergency messages
      bindings:
        mqtt:
          qos: 1
          retain: false
      message:
        name: messageReport
        title: Message Report
        payload:
          type: object
          properties:
            id:
              type: integer
              description: ID of the message the report is about
              example: 1
            status:
              $ref: '#/components/schemas/Status'

components:
  securitySchemes:
    user_pass:
      type: userPassword
  schemas:
    Status:
      type: string
      description: >
        A message can have the following statuses:


        |Status|Description|

        |---|---|

        | NOT_SENT | Mobilaris Message Adapter has received the message |

        | SENT | Mobilaris Message Adapter has verified that RabbitMQ has
        received and stored the message |

        | DELIVERED | Mobilaris Message Adapter has received a MessageReport
        from the client with the state DELIVERED |

        | ACKNOWLEDGED | Mobilaris Message Adapter has received the message |
      enum:
        - NOT_SENT
        - SENT
        - DELIVERED
        - ACKNOWLEDGED
      example: DELIVERED
    StatusReady:
      type: string
      description: >
        The sender of the message can set the expected actions of a client:


        |Status|Description|

        |---|---|

        |SENT|No MessageReport expected from the client|

        |DELIVERED|The client is expected to send a MessageReport with state
        DELIVERED after successfully reading a message|

        |ACKNOWLEDGED|The client is expected to send a MessageReport with state
        ACKNOWLEDGED after receiving user input|
      enum:
        - SENT
        - DELIVERED
        - ACKNOWLEDGED
      example: ACKNOWLEDGED
    ErrorCode:
      type: integer
      description: |
        Clients should always look for errors and disregard content if it is a non-zero value.
      
        |Value|Description|
        |---|---|
        |0|No error|
        |1|Internal Error|
        |100|Server publish failed, Rejected by RabbitMQ|
        |101|Timeout when publishing to Rabbit MQ|
      enum:
        - 0
        - 1
        - 100
        - 101
