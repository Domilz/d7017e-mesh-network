// Generated by Dagger (https://dagger.dev).
package com.epiroc.ble.di;

import android.bluetooth.BluetoothAdapter;
import android.content.Context;
import com.epiroc.ble.data.ble.CentralBLEManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideConnectionBLEManagerFactory implements Factory<CentralBLEManager> {
  private final Provider<Context> contextProvider;

  private final Provider<BluetoothAdapter> bluetoothAdapterProvider;

  public AppModule_ProvideConnectionBLEManagerFactory(Provider<Context> contextProvider,
      Provider<BluetoothAdapter> bluetoothAdapterProvider) {
    this.contextProvider = contextProvider;
    this.bluetoothAdapterProvider = bluetoothAdapterProvider;
  }

  @Override
  public CentralBLEManager get() {
    return provideConnectionBLEManager(contextProvider.get(), bluetoothAdapterProvider.get());
  }

  public static AppModule_ProvideConnectionBLEManagerFactory create(
      Provider<Context> contextProvider, Provider<BluetoothAdapter> bluetoothAdapterProvider) {
    return new AppModule_ProvideConnectionBLEManagerFactory(contextProvider, bluetoothAdapterProvider);
  }

  public static CentralBLEManager provideConnectionBLEManager(Context context,
      BluetoothAdapter bluetoothAdapter) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideConnectionBLEManager(context, bluetoothAdapter));
  }
}
